paths:
  /v1/users:
    post:
      tags:
        - User
      summary: creates a new user
      description: User creates a new account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password]
              properties:
                name:
                  type: string
                  example: "Bami Daniel"
                email:
                  type: string
                  example: "test@test.com"
                password:
                  type: string
                  example: "Password1!"
      responses:
        201:
          description: User created
    get:
      tags:
        - User
      summary: get all users
      description: get all users
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: all users
  /v1/users/signin:
    post:
      tags:
        - User
      summary: user login
      description: This route will return the User's information with the signed `accessToken` provided the details are valid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "test@test.com"
                password:
                  type: string
                  example: "Password1!"
              required:
                - email
                - password
      responses:
        200:
          description: User logged in
  
  /v1/users/{id}/posts:
    get:
      tags:
        - User
      summary: get all posts by user
      description: get all posts by user
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: user id
      responses:
        200:
          description: all posts by user
    post: 
      tags:
        - User
      summary: create a post
      description: create a post
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: user id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Post title"
                content:
                  type: string
                  example: "Post body"
              required:
                - title
                - content
      responses:
        201:
          description: post created
  
  /v1/users/top-users:
    get:
      tags:
        - User
      summary: get top users
      description: get top users
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: top users
  